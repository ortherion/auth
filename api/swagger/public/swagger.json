{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Signed token protects our admin endpoints",
        "title": "Auth-service",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "1.0.0"
    },
    "host": "localhost:3000",
    "basePath": "/v1/auth",
    "paths": {
        "/i": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Validate tokens and refresh tokens if refresh token is valid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Validate tokens",
                "operationId": "Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token",
                        "name": "accessToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "refresh token",
                        "name": "refreshToken",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate and authorized user. Return access and refresh tokens in cookies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authorized user",
                "operationId": "login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "redirect uri",
                        "name": "redirect_uri",
                        "in": "query"
                    },
                    {
                        "description": "request body",
                        "name": "Login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.TokenPair"
                        },
                        "headers": {
                            "accessToken": {
                                "type": "string",
                                "description": "token for access services"
                            },
                            "refreshToken": {
                                "type": "string",
                                "description": "token for refresh access_token"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "404": {
                        "description": "404 page not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "Auth": []
                    }
                ],
                "description": "Clears access and refresh tokens",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Clears tokens",
                "operationId": "logout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "redirect uri",
                        "name": "redirect_uri",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "access token",
                        "name": "accessToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "refresh token",
                        "name": "refreshToken",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "302": {
                        "description": "redirect"
                    },
                    "500": {
                        "description": "internal error"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.TokenPair": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "description": "AccessToken at",
                    "type": "string"
                },
                "refreshToken": {
                    "description": "RefreshToken rt",
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "creationDate": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "login": {
                    "type": "string",
                    "example": "test123"
                },
                "password": {
                    "type": "string",
                    "example": "qwerty"
                },
                "role": {
                    "type": "integer"
                }
            }
        },
        "rest.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Auth": {
            "type": "basic"
        }
    }
}